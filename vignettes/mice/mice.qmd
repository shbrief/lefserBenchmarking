---
title: "Biomarker discoverty with mice_rag2 data"
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
vignette: >
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteIndexEntry{Mice_Rag2 data}
  %\VignetteEncoding{UTF-8}
output:
  BiocStyle::html_document:
    number_sections: yes
    toc: yes
    toc_depth: 4
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(comment = "#>", 
                      collapse = TRUE, 
                      message = FALSE, 
                      warning = FALSE)
```

```{r echo=FALSE}
suppressPackageStartupMessages({
    library(lefser)
    library(microbiomeMarker)
    library(dplyr)
    library(ggplot2)
    library(lefserBenchmarking)
    library(grid)
    library(VennDiagram)
})
```

# Load data
This is the mice input data from LEfSe paper (Figure 3, Supplementary File 10)
```{bash echo=FALSE, eval=FALSE}
## Mice data for Figure 3 of the LEfSe paper
wget https://static-content.springer.com/esm/art%3A10.1186%2Fgb-2011-12-6-r60/MediaObjects/13059_2011_2561_MOESM10_ESM.TXT
```

```{r message=FALSE}
mice <- readr::read_table("data/mice_rag2.txt", col_names = FALSE)
mice[1:4, 1:4]

source("~/Projects/lefserBenchmarking/R/addTaxonomicPrefix.R")
mice$X1[2:340] <- addTaxonomicPrefixes(mice$X1[2:340], "\\|")
```

# lefser
Put together as SummarizedExperiment
```{r}
relative_ab <- mice[-1,] %>% tibble::column_to_rownames("X1") 
relative_ab <- apply(relative_ab, 2, as.numeric)
rownames(relative_ab) <- mice[["X1"]][-1]
colData <- as(mice[1, -1], "data.frame") %>% t 
colnames(colData) <- "Genotype"

rowData <- taxNameToTable(rownames(relative_ab), FALSE)

mice_se <- SummarizedExperiment(
    assays = list(relative_abundance = relative_ab), 
    colData = colData, 
    rowData = rowData
)
```

```{r}
set.seed(1982)
res <- lefser(relativeAb(mice_se), 
              groupCol = "Genotype", 
              kruskal.threshold = 0.01,
              lda.threshold = 2)
lefserPlot(res)
ggsave("Figures/Fig1B_mice_lefser.png")
```

```{r message=FALSE}
lefser_output <- res %>% 
    mutate(app_name = 'lefser') %>% 
    arrange(scores) %>% 
    dplyr::rename(lefser_LDA = scores)
lefser_output$feature <- lapply(lefser_output$feature, function(x) {
    strsplit(x, "\\|") %>% unlist %>% tail(., 1)}) %>% unlist

head(lefser_output)
```

## Histogram
```{r}
lefserPlotFeat(res, res$features[[1]])
ggsave("Figures/mice_lefser_hist.png")
```

## Cladogram
```{r}
## Get terminal nodes
tn <- get_terminal_nodes(rownames(mice_se))
mice_se_tn <- mice_se[tn,]

set.seed(1982)
resAll <- lefserAllRanks(
    relativeAb(mice_se_tn), 
    groupCol = "Genotype", 
    kruskal.threshold = 0.01,
    lda.threshold = 2)
lefserPlotClad(resAll, showTipLabels = TRUE)
ggsave("Figures/mice_lefser_cladogram.png")
```



# LEfSe from Docker
```{r}
col_names <- c('feature', 'log_hi_class_avg', 'class', 'lefse_docker_LDA', 'pval')
lefse_docker <- readr::read_tsv(
    "data/mice_rag2/mice_rag2.res",
    col_names = FALSE, show_col_types = FALSE) %>% 
    magrittr::set_colnames(col_names) %>% 
    filter(!is.na(lefse_docker_LDA)) %>% 
    mutate(lefse_docker_LDA = ifelse(class == "control", -lefse_docker_LDA, lefse_docker_LDA),
           app_name = 'lefse_docker')

lefse_docker$feature <- getMostSpecifiTaxa(lefse_docker$feature, "\\.")

head(lefse_docker)
```

```{r}
## Format LEfSe results to plot using `lefserPlot` function
lefse_docker_for_plot <- lefse_docker %>%
    mutate(direction = ifelse(class == "truc", 1, -1)) %>%
    mutate(scores = direction * lefse_docker_LDA) %>%
    select(feature, scores) %>%
    dplyr::rename(features = feature)
attributes(lefse_docker_for_plot)$groups <- c("rag2", "truc")

lefserPlot(lefse_docker_for_plot, color = "l")
ggsave("Figures/Fig1A_mice_LEfSe.png")
```


# microbiomeMarker
```{r}
mice_ps <- mia::convertToPhyloseq(mice_se, 
                                  assay.type = "relative_abundance")
set.seed(1982)
mm_lefse <- run_lefse(
    mice_ps,
    kw_cutoff = 0.01,
    group = "Genotype",
    multigrp_strat = TRUE,
    lda_cutoff = 2
)

plot_ef_bar(mm_lefse)
```

```{r}
mm_output <- data.frame(
    feature = marker_table(mm_lefse)$feature,
    mm_LDA = marker_table(mm_lefse)$ef_lda,
    app_name = "microbiomeMarker") %>% arrange(mm_LDA)

mm_output$feature <- lapply(mm_output$feature, function(x) {
    strsplit(x, "\\|") %>% unlist %>% tail(., 1)}) %>% unlist

head(mm_output)
```


# Venn diagram
```{r}
set1 <- lefser_output$feature
set2 <- lefse_docker$feature
set3 <- mm_output$feature

## Overlap between LEfSe and lefser
length(intersect(set1, set2))
setdiff(set1, set2) # False Negatives
setdiff(set2, set1) # False Positives

## Overlap between LEfSe and microbiomeMarker
length(intersect(set3, set2))
setdiff(set3, set2)
setdiff(set2, set3)
```

```{r SupFig4B}
source("~/Projects/lefserBenchmarking/R/threeVennDiagram.R")
fit <- threeVennDiagram(set2, set1, set3)
plot(fit, quantities = TRUE)
```


```{r LDA_comparison, echo=FALSE, eval=FALSE}
## Differences in biomarker order
lda_lefser <- lefser_output %>%
    filter(feature %in% intersect(set1, set2)) %>%
    select(feature, lefser_LDA) %>%
    arrange(lefser_LDA)
lda_lefse <- lefse_docker %>%
    filter(feature %in% intersect(set1, set2)) %>%
    select(feature, lefse_docker_LDA) %>%
    dplyr::rename(lefse_LDA = lefse_docker_LDA) %>%
    arrange(lefse_LDA)   
table(lda_lefser$feature == lda_lefse$feature)

## Difference in LDA scores
lda_all <- dplyr::full_join(lda_lefser, lda_lefse, by = "feature")
lad_all_diff <- abs(abs(lda_all$lefser_LDA) - abs(lda_all$lefse_LDA))
mean(lad_all_diff)
sd(lad_all_diff)
```



# SessionInfo

<details>
```{r}
sessionInfo()
```
</details>

